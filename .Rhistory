v1 <- c(5,TRUE,9)
typeof(v1)
require(ggplots)
require(ggplot2)
geom_
geom_
geom_
require(ggplot2)
geom_
library(shiny); runApp('app2.R')
library(rsconnect)
rsconnect::setAccountInfo(name='justinnn',
token='078EEFB8122D7F476AC8BCECB27BB9A7',
secret='jPYTABOeovgJVF7q6pHwIXKs54N7WKEDNgYoyhi4')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
rsconnect::deployApp('/Users⁩/⁨wudaopeng⁩/Desktop⁩/⁨2019S1⁩/⁨FIT5147⁩/⁨ass2⁩/app2.R')
library(rsconnect)
rsconnect::deployApp('/Users⁩/⁨wudaopeng⁩/Desktop⁩/⁨2019S1⁩/⁨FIT5147⁩/⁨ass2⁩/app2.R')
library(rsconnect)
rsconnect::deployApp('/Users/wudaopeng/Desktop/2019S1/FIT5147/ass2/app2.R')
library(rsconnect)
rsconnect::deployApp('/Users/wudaopeng/Desktop/2019S1/FIT5147/ass2/')
library(rsconnect)
rsconnect::deployApp('/Users/wudaopeng/Desktop/2019S1/FIT5147/ass2/')
rsconnect::setAccountInfo(name='justinnn',
token='078EEFB8122D7F476AC8BCECB27BB9A7',
secret='jPYTABOeovgJVF7q6pHwIXKs54N7WKEDNgYoyhi4')
library(rsconnect)
rsconnect::deployApp('/Users/wudaopeng/Desktop/2019S1/FIT5147/ass2/')
library(shiny); runApp('Desktop/IE/appIE.R')
runApp('Desktop/IE/appIE.R')
library(shiny); runApp('Desktop/IE/appIE.R')
install.packages("leaflet")
shiny::runApp('Desktop/2019S1/FIT5147/5147assignment2_daopengWu_28302435')
install.packages("dplyr")
install.packages("magrittr")
shiny::runApp('Desktop/2019S1/FIT5147/5147assignment2_daopengWu_28302435')
shiny::runApp('Desktop/2019S1/FIT5147/5147assignment2_daopengWu_28302435')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Untitled3.R')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
console.log(my_coords);
my_coords
## app.R ##
library(shiny)
library(shinydashboard)
library(googleway)
library(DT)
key <- "AIzaSyAOUAfjByh7eSEVrv2ygMRrZo6MHLUB5og"
set_key(key = key)
google_keys()
centers <- read.csv('test2_copy.csv')
mtcars2 = mtcars[, c(1:5, 9)]
mtcars2$am = factor(mtcars$am, c(0, 1), c('automatic', 'manual'))
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
dashboardBody(
fluidRow(
column(4,
selectInput("postCode",
"postcode:",
c("All",
unique(as.character(centers$postCode))))
),
column(4,
selectInput("Religion",
"Religion:",
c("All",
unique(as.character(centers$RELIGION))))
),
column(4,
selectInput("Culture",
"Culture:",
c("All",
unique(as.character(centers$CULTURE))))
)
,
column(4,
selectInput("Address",
"Address:",
c("All",
unique(as.character(centers$Address))))
)
),
DT::dataTableOutput("table"),
column(3, verbatimTextOutput('x4')),
textOutput("celltext"),
div(
textInput(inputId = "my_address", label = "")
,textOutput(outputId = "copy_of_address")
,HTML(paste0("
<script>
function initAutocomplete() {
var uluru = {lat: -25.344, lng: 131.036};
new google.maps.places.Autocomplete(
(document.getElementById('my_address')),
{types: ['geocode']}
); var marker = new google.maps.Marker({position: uluru, map: map});
}
</script>
<script src='https://maps.googleapis.com/maps/api/js?key=", key,"&libraries=places&callback=initAutocomplete'
async defer></script>
"))
,google_mapOutput(outputId = "my_map")
),
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
my_address <- reactive({
#input$my_address
#centers[['Address']][1]
#input$Address
#output$celltext
centers[input$table_cells_selected]
})
output$copy_of_address <- renderText({
my_address()
})
#  output$table <- DT::renderDataTable(DT::datatable({
#   data <- centers
#  if (input$postCode != "All") {
#   data <- data[data$postCode == input$postCode,]
#  }
# data
#  }))
#
output$table <- DT::renderDataTable(centers,
selection=list(mode="single",target="cell"),
server = FALSE,
rownames=FALSE
)
#output$selectedCells <- renderPrint(input$table_cells_selected)
output$celltext <- renderText({
#cell <- input$table_cells_selected
centers <- centers[input$table_cells_selected]
})
#
selectedRow <- eventReactive(input$table_rows_selected,{
row.names(centers)[c(input$table_rows_selected)]
})
output$selected <- renderText({
selectedRow()
})
output$address <- renderText({
table['Address']
})
output$x4 = renderPrint({
s = input$table_rows_selected
if (length(s)) {
cat('These rows were selected:\n\n')
cat(s['Address'])
cat(s, sep = ', ')
}
})
output$my_map <- renderGoogle_map({
my_address <- my_address()
validate(
need(my_address, "Address not available")
)
df <- google_geocode(address = my_address)
my_coords <- geocode_coordinates(df)
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
my_coords2 <- data.frame(my_coords)
my_coords
google_map(
location = my_coords,
zoom = 10,
map_type_control = FALSE,
zoom_control = FALSE,
street_view_control = FALSE
)%>% add_markers(lat = my_coords2$lat, lon = my_coords2$lng)
})
}
#shinyApp(ui, server)
my_coords
shinyApp(ui, server)
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
df <- google_geocode(address = "49-51 STANLEY Street,BANKSTOWN,NSW,2200,Australia")
df
my_coords <- geocode_coordinates(df)
my_coords
my_coords
my_coords$lat[1]
my_coords$lat[1]
my_coords$lat[1]
type.of(my_coords$lng[1])
my_coords$lat[1]
typeof(my_coords$lng[1])
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
my_coords
my_coords2 <- data.frame(my_coords)
my_coords2 <- data.frame(my_coords)
my_coords2
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
df <- google_geocode(address = "49-51 STANLEY Street,BANKSTOWN,NSW,2200,Australia")
typeof(df)
df <- google_geocode(address = "49-51 STANLEY Street,BANKSTOWN,NSW,2200,Australia")
df
typeof(df)
my_coords <- geocode_coordinates(df)
my_coords
typeof(my_coords)
my_coords$lat[1]
typeof(my_coords$lng[1])
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
my_coords
my_coords2 <- data.frame(my_coords)
my_coords2
my_coords2 <- data.frame(my_coords)
typeof(my_coords2)
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
my_coords
my_coords2 <- data.frame(my_coords)
typeof(my_coords2)
my_coords
my_coords[1]
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
df <- google_geocode(address = "49-51 STANLEY Street,BANKSTOWN,NSW,2200,Australia")
df
typeof(df)
my_coords <- geocode_coordinates(df)
my_coords
typeof(my_coords)
my_coords$lat[1]
typeof(my_coords$lng[1])
my_coords <- c(my_coords$lat[1], my_coords$lng[1])
my_coords
my_coords[1]
my_coords[2]
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
library(shiny); runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/homecenter/homeCenterApp.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
runApp('Desktop/2019S1/FIT5120/IE/appIE.R')
setwd("~/Desktop/IED3")
growth <- read.csv('dementiaGrowth.csv', encoding="UTF-8", stringsAsFactors=FALSE)
growth <- read.csv('dementiaGrowth.csv', encoding="UTF-8", stringsAsFactors=FALSE)
growth
growth[1,1]
growth['Year']
growth[1,'Year']
growth[1,'State']
paste("A", 1:6, sep = "")
paste(1:12)
paste("Today is", date())
paste(growth[1,'State'],type)
paste(growth[1,'State'],"type")
paste(growth[1,'State'],""type"")
paste(growth[1,'State'],"/"type/"")
paste("type:",growth[1,'State'])
paste("\"type\",growth[1,'State'])
paste("\"type",growth[1,'State'])
cat("\"type",growth[1,'State'])
cat(""type"",growth[1,'State'])
cat("\"type\"",growth[1,'State'])
cat("\"type\""\,growth[1,'State'])
cat("\"type\"",growth[1,'State'])
cat("\"type\"",growth[1,'State'],sep = ",")
cat("\{"type\"",growth[1,'State'],sep = ",")
cat("\{\"type\"",growth[1,'State'],sep = ",")
cat("\"type\"",growth[1,'State'],sep = ",")
cat("{\"type\"",growth[1,'State'],sep = ",")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],"\"place\":",growth[1,'State'],"},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'lon'],growth[1,'lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],"\"place\":",growth[1,'State'],"},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}",,sep = ",")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}",sep = ",")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}",sep = ",")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
growth
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State'],},\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":,growth[1,'State']}","\"geometry\":{\"type\":\"Point\",\"coordinates\":[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":",growth[1,'State'],"},"\"geometry\":{\"type\":\"Point\",\"coordinates\",[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":",growth[1,'State'],"},"\"geometry\":{\"type\":\"Point\",\"coordinates\",[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":",growth[1,'State'],"},"\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\"","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":",growth[1,'State'],"},\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":\"",growth[1,'State'],"},\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":\"",growth[1,'State'],"\"},\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":\"",growth[1,'State'],"\"},\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}}")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],",\"place\":\"",growth[1,'State'],"\"},\"geometry\":{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
result = ""
for(i in 1:nrow(growth))
{
result = result + cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},")
}
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
result = ""
for(i in 1:nrow(growth))
{
result = result + cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},")
}
write.csv(origAddress, "restNewGeocodedHomeCare3.csv",row.names=FALSE,fileEncoding = "UTF-8")
result = ""
for(i in 1:nrow(growth))
{
result = cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
write.csv(result, "restNewGeocodedHomeCare3.geojson",row.names=FALSE,fileEncoding = "UTF-8")
result
result = ""
for(i in 1:nrow(growth))
{
result <- cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
result
result
result = ""
result
for(i in 1:nrow(growth))
{
result <- cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
result
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
result
result = ""
result
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
result
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
for(i in 1:nrow(growth))
{
o <- cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
o
cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
b <-cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
b
for(i in 1:nrow(growth))
{
o <- paste(cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},")))
}
o
result
for(i in 1:nrow(growth))
{
o <- print(cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},")))
}
o
for(i in 1:nrow(growth))
{
print(cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},")))
}
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
o
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
b <-paste("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
b
for(i in 1:nrow(growth))
{
result<- paste(result,paste("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
result
b <-paste("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
b
b <-paste("{"type":\"Feature\",","\"properties\":{\"mag\":",growth[1,'Number'],
",\"place\":\"",growth[1,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[1,'Lon'],",",growth[1,'Lat'],"]}},")
growth <- read.csv('dementiaGrowth.csv', encoding="UTF-8", stringsAsFactors=FALSE)
growth <- data.frame(stringsAsFactors = FALSE)
for(i in 1:nrow(growth))
{
cat(result,cat("{\"type\":\"Feature\",","\"properties\":{\"mag\":",growth[i,'Number'],
",\"place\":\"",growth[i,'State'],"\"},\"geometry\":
{\"type\":\"Point\",\"coordinates\"[",growth[i,'Lon'],",",growth[i,'Lat'],"]}},"))
}
